name: Hackathon-AWS-Device-Farm-Automation 

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      browserFamily:
        description: 'Enter the browser family name like chrome, firefox, IE etc'
        default: 'chrome'
        # Input has to be provided for the workflow to run
        required: true
      projectType:
        description: 'Enter the project type name like mobile, desktop etc'
        default: 'desktop'
        # Input has to be provided for the workflow to run
        required: true
      mobileAppType:
        description: 'Enter the mobile app type name like android, ios or web etc'
        default: 'android'
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  Hackathon-AWS-Device-Farm-Automation:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Code from github repo
      uses: actions/checkout@v3
      with:
        ref: master
    - name: Set up Python
      uses: actions/setup-python@v4.3.0
      with:
        python-version: '3.10'
    - name: Install Project dependencies using pip
      run: |
          python -m pip install -r requirements.txt
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Install AWS CLI v2
      run: >
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o
        /tmp/awscliv2.zip
          
        unzip -q /tmp/awscliv2.zip -d /tmp
          
        rm /tmp/awscliv2.zip
          
        sudo /tmp/aws/install --update
          
        rm -rf /tmp/aws/
        
    - name: Run Test cases for desktop project
      if: github.event.inputs.projectType == 'desktop'
      run: >
        echo "Running Test cases on browser ${{ github.event.inputs.browserFamily }}"
        
        pytest -s --alluredir=allure-results/ --browser="${{ github.event.inputs.browserFamily }}"
      continue-on-error: true
  
    - name: Get Allure history
      uses: actions/checkout@v2
      if: github.event.inputs.projectType == 'desktop'
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action
      uses: simple-elf/allure-report-action@master
      if: github.event.inputs.projectType == 'desktop'
      with:
        allure_results: allure-results
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 20

    - name: Deploy report to Github Pages
      if: github.event.inputs.projectType == 'desktop'
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history

    - name: Run Test cases for Mobile project
        if: github.event.inputs.projectType == 'mobile'
        run: >
          echo "Running Test cases on mobile ${{ github.event.inputs.mobileAppType }}"

          aws s3 cp s3://hackathonartifacts/app-debug.apk  --region us-west-2 /tmp

          aws s3 cp s3://hackathonartifacts/app-debug-androidTest.apk  --region us-west-2 /tmp

          ls -la /tmp/

          python main.py
        continue-on-error: true
    
